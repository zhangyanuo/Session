{"remainingRequest":"/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/src/App.vue","mtime":1620140113544},{"path":"/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/node_modules/cache-loader/dist/cjs.js","mtime":1610697713864},{"path":"/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/node_modules/babel-loader/lib/index.js","mtime":1610697719839},{"path":"/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/node_modules/cache-loader/dist/cjs.js","mtime":1610697713864},{"path":"/Users/yanuo.zhang/SessionSpace/Session/Vue/vue-session/node_modules/vue-loader/lib/index.js","mtime":1620116628135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbXNnOiAiaGVsbG8gd29ybGQiLCAvL+WjsOaYjuW8j+a4suafkwogICAgICBpc1Nob3c6IGZhbHNlLCAvL+adoeS7tua4suafkwogICAgICBpc0J1dHRvbkRpc2FibGVkOiB0cnVlLCAvL+WxnuaApwogICAgICBudW1iZXI6IDEsIC8v6KGo6L6+5byPCiAgICAgIG9rOiB0cnVlLAogICAgICBpZDogMSwKICAgICAgaXNBY3RpdmU6IHRydWUsCiAgICAgIGhhc0Vycm9yOiBmYWxzZSwKICAgICAgY2xhc3NPYmo6IHsKICAgICAgICAib3JhbmdlLXRleHQiOiB0cnVlLAogICAgICAgICJwaW5rLXRleHQiOiBmYWxzZSwKICAgICAgfSwKICAgICAgYWN0aXZlQ2xhc3M6ICJhY3RpdmUiLAogICAgICB3ZWlnaHRDbGFzczogImZvbnRXZWlnaHQiLAogICAgICBhY3RpdmVDb2xvcjogInBpbmsiLAogICAgICBmb250U2l6ZTogMzAsCiAgICAgIHN0eWxlT2JqZWN0OiB7CiAgICAgICAgY29sb3I6ICJyZWQiLAogICAgICAgIGZvbnRTaXplOiAiMTNweCIsCiAgICAgIH0sCiAgICAgIGJhc2VTdHlsZXM6IHsKICAgICAgICBmb250U2l6ZTogIjIwcHgiLAogICAgICAgIGZvbnRXZWlnaHQ6ICJib2xkIiwKICAgICAgfSwKICAgICAgb3ZlcnJpZGluZ1N0eWxlczogewogICAgICAgIGNvbG9yOiAiYmx1ZSIsCiAgICAgIH0sCiAgICAgIGxpc3Q6IFsKICAgICAgICB7IGlkOiAxLCBuYW1lOiAi5byg5LiJIiwgYWdlOiAxMiB9LAogICAgICAgIHsgaWQ6IDIsIG5hbWU6ICLotbXlm5siLCBhZ2U6IDE5IH0sCiAgICAgICAgeyBpZDogMywgbmFtZTogIueOi+S6lCIsIGFnZTogMjkgfSwKICAgICAgICB7IGlkOiA0LCBuYW1lOiAi5p2O5YWtIiwgYWdlOiA5IH0sCiAgICAgIF0sCiAgICAgIGxpc3RPYmo6IHsKICAgICAgICB0aXRsZTogIkhvdyB0byBkbyBsaXN0cyBpbiBWdWUiLAogICAgICAgIGF1dGhvcjogIkphbmUgRG9lIiwKICAgICAgICBwdWJsaXNoZWRBdDogIjIwMTYtMDQtMTAiLAogICAgICB9LAogICAgICBtdWx0TWVzc2FnZTogIm11bHQgbWVzc2FnZSIsCiAgICAgIGNoZWNrZWROYW1lczogW10sCiAgICAgIHBpY2tlZDogIiIsCiAgICAgIHNlbGVjdGVkOiAiQSIsCiAgICAgIG9wdGlvbnM6IFsKICAgICAgICB7IHRleHQ6ICJPbmUiLCB2YWx1ZTogIkEiIH0sCiAgICAgICAgeyB0ZXh0OiAiVHdvIiwgdmFsdWU6ICJCIiB9LAogICAgICAgIHsgdGV4dDogIlRocmVlIiwgdmFsdWU6ICJDIiB9LAogICAgICBdLAogICAgICBhZ2U6IDEsCiAgICAgIG1lc3NhZ2U6ICJoZWxsbyIsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJldmVyc2VkTWVzc2FnZTogZnVuY3Rpb24gKCkgewogICAgICAvLyBgdGhpc2Ag5oyH5ZCRIHZtIOWunuS+iwogICAgICByZXR1cm4gdGhpcy5tc2cuc3BsaXQoIiIpLnJldmVyc2UoKS5qb2luKCIiKTsKICAgIH0sCiAgICBjb21wdXRlQ2xhc3NPYmooKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYWN0aXZlOiB0aGlzLmlzQWN0aXZlICYmICF0aGlzLmhhc0Vycm9yLAogICAgICAgICJkYW5nZXItdGV4dCI6IHRoaXMuaGFzRXJyb3IsCiAgICAgIH07CiAgICB9LAogIH0sCiAgYmVmb3JlQ3JlYXRlKCkgewogICAgY29uc29sZS5sb2coImJlZm9yZUNyZWF0ZSIpOwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCJjcmVhdGVkIik7CiAgfSwKICBiZWZvcmVNb3VudCgpIHsKICAgIGNvbnNvbGUubG9nKCJiZWZvcmVNb3VudCIpOwogIH0sCiAgbW91bnRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCJtb3VudGVkIik7CiAgICBjb25zb2xlLmxvZyh0aGlzLm1zZyk7CiAgfSwKICBiZWZvcmVVcGRhdGUoKSB7CiAgICBjb25zb2xlLmxvZygiYmVmb3JlVXBkYXRlIik7CiAgfSwKICB1cGRhdGVkKCkgewogICAgY29uc29sZS5sb2coInVwZGF0ZWQiKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNob3dtc2coKSB7CiAgICAgIGFsZXJ0KHRoaXMubXNnKTsKICAgIH0sCiAgICBzaG93Q29udGVudCgpIHsKICAgICAgdGhpcy5pc1Nob3cgPSAhdGhpcy5pc1Nob3c7CiAgICB9LAogICAgYWxsQ2xpY2soKSB7CiAgICAgIGFsZXJ0KCJ0ZXN0Iik7CiAgICB9LAogICAgYWRkSXRlbSgpIHsKICAgICAgdGhpcy5saXN0LnB1c2goeyBpZDogMTAsIG5hbWU6ICJ4eHgiLCBhZ2U6IDEwIH0pOwogICAgfSwKICAgIHJldmVyc2VkTWVzc2FnZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5sb2coInNzc3NzcyIpOwogICAgICByZXR1cm4gdGhpcy5tZXNzYWdlLnNwbGl0KCIiKS5yZXZlcnNlKCkuam9pbigiIik7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"border\">\n      <label>声明式渲染:</label>\n      <div>{{ msg }}</div>\n    </div>\n\n    <div class=\"border\">\n      <label>属性:</label>\n      <div class=\"margin-bottom-5\">\n        <button v-bind:disabled=\"isButtonDisabled\">v-bind:disabled</button>\n      </div>\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">使用js表达式</label>\n      <div>\n        {{ number + 1 }}\n      </div>\n      <div>\n        {{ ok ? \"YES\" : \"NO\" }}\n      </div>\n      <div>\n        {{ msg.split(\"\").reverse().join(\"\") }}\n      </div>\n      <div v-bind:id=\"'list-' + id\">id</div>\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">修饰符</label>\n      <button v-on:click.stop=\"showContent\">click stop</button>\n      <div>\n        <a href=\"https://cn.vuejs.org/v2/guide/events.html\"\n          >https://cn.vuejs.org/v2/guide/events.html</a\n        >\n      </div>\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">缩写</label>\n      <div v-bind:id=\"'testId'\">v-bind:id</div>\n      <div :id=\"'testId1'\">:id</div>\n      <button v-on:click=\"showmsg\">v-on:click</button>\n      <button @click=\"showmsg\">@click</button>\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">class绑定</label>\n      <button\n        @click=\"\n          isActive = true;\n          hasError = false;\n        \"\n      >\n        active\n      </button>\n      <div :class=\"{ active: isActive, 'dander-text': hasError }\">\n        active样式\n      </div>\n      <div :class=\"classObj\">多个class绑定</div>\n      <!-- <div :class=\"computeClassObj\">\n        计算属性\n      </div> -->\n      <div :class=\"[activeClass, weightClass]\">数组添加</div>\n      <div :class=\"[isActive ? activeClass : '', weightClass]\">三元表达</div>\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">style绑定</label>\n      <div :style=\"{ color: activeColor, fontSize: fontSize + 'px' }\">\n        style样式\n      </div>\n      <div :style=\"styleObject\">style对象绑定</div>\n      <div :style=\"[baseStyles, overridingStyles]\">数组添加style</div>\n    </div>\n\n    <div class=\"border\">\n      <label>条件渲染v-if:</label>\n      <button @click=\"showContent\">click</button>\n      <div v-if=\"isShow\">{{ msg }}</div>\n      <div v-else>{{ msg.split(\"\").reverse().join(\"\") }}</div>\n    </div>\n\n    <div class=\"border\">\n      <label>条件渲染v-show:</label>\n      <button @click=\"showContent\">click</button>\n      <div v-show=\"isShow\">{{ msg }}</div>\n      <div class=\"tips\">v-show不支持v-else，元素始终在dom中</div>\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">列表渲染</label>\n      <ul>\n        <li v-for=\"(item, index) in list\" :key=\"item.id\">\n          {{ index }}---{{ item.name }}:{{ item.age }}\n        </li>\n      </ul>\n      <button @click=\"addItem\">Add Item</button>\n      <label for=\"\">v-for使用对象</label>\n      <div v-for=\"value in listObj\" :key=\"value\">{{ value }}</div>\n      <!-- <div v-for=\"(value,name) in listObj\" :key=\"name\">{{name}}:{{value}}</div> -->\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">表单</label>\n      <div class=\"tips\">\n        你可以用 v-model 指令在表单 'input'、'textarea' 及 'select'\n        元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但\n        v-model\n        本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。\n      </div>\n      <div class=\"tips\">\n        v-model 会忽略所有表单元素的 value、checked、selected attribute\n        的初始值而总是将 Vue 实例的数据作为数据来源。你应该通过 JavaScript\n        在组件的 data 选项中声明初始值。\n      </div>\n      <label for=\"\">input</label>\n      <div>\n        <input v-model=\"msg\" placeholder=\"edit me\" />\n        <p>\n          Message is: <span class=\"active\">{{ msg }}</span>\n        </p>\n      </div>\n      <label for=\"\">textarea</label>\n      <div>\n        <textarea\n          v-model=\"multMessage\"\n          placeholder=\"add multiple lines\"\n        ></textarea>\n        <p style=\"white-space: pre-line\">\n          Multiline message is: <span class=\"active\">{{ multMessage }}</span>\n        </p>\n      </div>\n      <label for=\"\">复选框</label>\n      <div>\n        <input type=\"checkbox\" id=\"jack\" value=\"Jack\" v-model=\"checkedNames\" />\n        <span>Jack</span>\n        <input type=\"checkbox\" id=\"john\" value=\"John\" v-model=\"checkedNames\" />\n        <span>John</span>\n        <input type=\"checkbox\" id=\"mike\" value=\"Mike\" v-model=\"checkedNames\" />\n        <span>Mike</span>\n        <br />\n        <span>\n          Checked names:\n          <span class=\"active\">{{ checkedNames }}</span>\n        </span>\n      </div>\n      <label for=\"\">单选框</label>\n      <div>\n        <input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\" />\n        <span>One</span>\n        <br />\n        <input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\" />\n        <span>Two</span>\n        <br />\n        <span>\n          Picked: <span class=\"active\">{{ picked }}</span>\n        </span>\n      </div>\n      <label for=\"\">Select</label>\n      <div>\n        <select v-model=\"selected\">\n          <option\n            v-for=\"option in options\"\n            :key=\"option.value\"\n            :value=\"option.value\"\n          >\n            {{ option.text }}\n          </option>\n        </select>\n        <span>\n          Selected:\n          <span class=\"active\">{{ selected }}</span>\n        </span>\n      </div>\n      <label for=\"\">修饰符</label>\n      <input v-model.number=\"age\" type=\"number\" />\n    </div>\n\n    <div class=\"border\">\n      <label for=\"\">计算属性及侦听器</label>\n      <div>\n        {{ msg.split(\"\").reverse().join(\"\") }}\n      </div>\n      <div class=\"tips\">\n        在这个地方，模板不再是简单的声明式逻辑。你必须看一段时间才能意识到，这里是想要显示变量\n        message\n        的翻转字符串。当你想要在模板中的多处包含此翻转字符串时，就会更加难以处理。\n        <br />\n        所以，对于任何复杂逻辑，你都应当使用计算属性。\n      </div>\n      <label for=\"\">基础例子</label>\n      <div id=\"example\">\n        <p>Original message: \"{{ msg }}\"</p>\n        <p>Computed reversed message: \"{{ reversedMessage }}\"</p>\n      </div>\n      <label for=\"\">计算属性缓存 vs 方法</label>\n      <p>Reversed message: \"{{ reversedMessages() }}\"</p>\n      <div class=\"tips\">\n        我们可以将同一函数定义为一个方法而不是一个计算属性。两种方式的最终结果确实是完全相同的。然而，不同的是计算属性是基于它们的响应式依赖进行缓存的。只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要\n        message 还没有发生改变，多次访问 reversedMessage\n        计算属性会立即返回之前的计算结果，而不必再次执行函数。\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      msg: \"hello world\", //声明式渲染\n      isShow: false, //条件渲染\n      isButtonDisabled: true, //属性\n      number: 1, //表达式\n      ok: true,\n      id: 1,\n      isActive: true,\n      hasError: false,\n      classObj: {\n        \"orange-text\": true,\n        \"pink-text\": false,\n      },\n      activeClass: \"active\",\n      weightClass: \"fontWeight\",\n      activeColor: \"pink\",\n      fontSize: 30,\n      styleObject: {\n        color: \"red\",\n        fontSize: \"13px\",\n      },\n      baseStyles: {\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n      },\n      overridingStyles: {\n        color: \"blue\",\n      },\n      list: [\n        { id: 1, name: \"张三\", age: 12 },\n        { id: 2, name: \"赵四\", age: 19 },\n        { id: 3, name: \"王五\", age: 29 },\n        { id: 4, name: \"李六\", age: 9 },\n      ],\n      listObj: {\n        title: \"How to do lists in Vue\",\n        author: \"Jane Doe\",\n        publishedAt: \"2016-04-10\",\n      },\n      multMessage: \"mult message\",\n      checkedNames: [],\n      picked: \"\",\n      selected: \"A\",\n      options: [\n        { text: \"One\", value: \"A\" },\n        { text: \"Two\", value: \"B\" },\n        { text: \"Three\", value: \"C\" },\n      ],\n      age: 1,\n      message: \"hello\",\n    };\n  },\n  computed: {\n    reversedMessage: function () {\n      // `this` 指向 vm 实例\n      return this.msg.split(\"\").reverse().join(\"\");\n    },\n    computeClassObj() {\n      return {\n        active: this.isActive && !this.hasError,\n        \"danger-text\": this.hasError,\n      };\n    },\n  },\n  beforeCreate() {\n    console.log(\"beforeCreate\");\n  },\n  created() {\n    console.log(\"created\");\n  },\n  beforeMount() {\n    console.log(\"beforeMount\");\n  },\n  mounted() {\n    console.log(\"mounted\");\n    console.log(this.msg);\n  },\n  beforeUpdate() {\n    console.log(\"beforeUpdate\");\n  },\n  updated() {\n    console.log(\"updated\");\n  },\n  methods: {\n    showmsg() {\n      alert(this.msg);\n    },\n    showContent() {\n      this.isShow = !this.isShow;\n    },\n    allClick() {\n      alert(\"test\");\n    },\n    addItem() {\n      this.list.push({ id: 10, name: \"xxx\", age: 10 });\n    },\n    reversedMessages: function () {\n      console.log(\"ssssss\");\n      return this.message.split(\"\").reverse().join(\"\");\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.border {\n  border: 1px solid #333;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.border label {\n  font-size: 14px;\n  font-weight: bold;\n  display: block;\n  margin: 5px 0;\n}\n.margin-bottom-5 {\n  margin-bottom: 5px;\n}\n.tips {\n  color: red;\n  font-size: 12px;\n}\n.active {\n  color: green;\n}\n.dander-text {\n  color: red;\n}\n.orange-text {\n  color: orange;\n}\n.pink-text {\n  color: pink;\n}\n.fontWeight {\n  font-weight: bold;\n}\n</style>\n"]}]}